name: Publish project to PyPI

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install 'build'
        run: python3 -m pip install build --user
      - name: Build project wheel and tarball
        run: python3 -m build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
  publish-to-pypi:
    name: Publish Python distribution to PyPI
    if: startsWith(github.ref, 'refs/tags/')
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: release
      url: https://pypi.org/p/laebelmaker
    permissions:
      id-token: write
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
  github-release:
    name: Sign artifacts and create a GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
    - name: Download uploaded artifacts
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v1.2.3
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Generate NOTES.md file
      run: ./generate-notes.sh
      shell: bash
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        '${{ github.ref_name }}'
        --repo '${{ github.repository }}'
        --title 'v${{ github.ref_name }}'
        --notes-file NOTES.md
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'


